<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnDangNhap.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCABmAa8DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5dDEjnr3wSM0m0dgPyoor94PwnQOPQflRtHpRRQAm0ZpcUUU7
        sYm2lHAoopa9xBS5IGM0lFP5j0F3H1o3N/eNLtpfL96d2Owgdh/EaPMf+8aXbTtlPUQ3zJP7xqVLyeMf
        Kw/FQabt/wA4pwX2qry7hYmXV7xPuzBfogqZNevx/wAtwfqgqltpcCi8urDRdC//AMJDqHaVP++BS/8A
        CSaiP+Wyj/tmKobc9qNvtT17j5maP/CTal/z2X/v2Kd/wlGpD/lsv/fsVm7Pal8s07sXM+5pf8JVqX/P
        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
</value>
  </data>
</root>